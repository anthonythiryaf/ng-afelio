//
// Columns size
// Create a utility class for the columns size in grid
// .column-[$name]-[$qty]
//
// @param $name String  The name of the size
//

@mixin columns-size ($name)
{
  $iterator: 0;

  @for $iterator from 0 to $columns+1
  {
    .column-#{$iterator},
    .column-#{$name}-#{$iterator}
    {
      @extend .relative;
      flex-basis: 100%;
    }

    @include media-up($name)
    {
      .column-#{$name}-#{$iterator}
      {
        $size: #{(100% / $columns) * $iterator};
        flex-basis: $size;
      }

      $iterator: $iterator + 1;
    }
  }
}

//
// Margin
// Create a utility class for the margin
// .mx-[$name]
//
// @param $name String  The name of the size
// @param $qty Int      The quantity of the margin
//
@mixin margin-size ($name, $qty)
{
  .m-#{$name}
  {
    margin: $qty;
  }
}

//
// Margin-X
// Create a utility class for the margin
// .mx-[$name]
//
// @param $name String  The name of the size
// @param $qty Int      The quantity of the margin
//
@mixin margin-x-size ($name, $qty)
{
  .mx-#{$name}
  {
    margin-left: $qty;
    margin-right: $qty;
  }
}

//
// Margin-Y
// Create a utility class for the margin
// .my-[$name]
//
// @param $name String  The name of the size
// @param $qty Int      The quantity of the margin
//
@mixin margin-y-size ($name, $qty)
{
  .my-#{$name}
  {
    margin-top: $qty;
    margin-bottom: $qty;
  }
}

//
// Margin-Top
// Create a utility class for the margin
// .mt-[$name]
//
// @param $name String  The name of the size
// @param $qty Int      The quantity of the margin
//
@mixin margin-top-size ($name, $qty)
{
  .mt-#{$name}
  {
    margin-top: $qty;
  }
}

//
// Margin-Right
// Create a utility class for the margin
// .mr-[$name]
//
// @param $name String  The name of the size
// @param $qty Int      The quantity of the margin
//
@mixin margin-right-size ($name, $qty)
{
  .mr-#{$name}
  {
    margin-right: $qty;
  }
}

//
// Margin-Bottom
// Create a utility class for the margin
// .mb-[$name]
//
// @param $name String  The name of the size
// @param $qty Int      The quantity of the margin
//
@mixin margin-bottom-size ($name, $qty)
{
  .mb-#{$name}
  {
    margin-bottom: $qty;
  }
}

//
// Margin-Left
// Create a utility class for the margin
// .ml-[$name]
//
// @param $name String  The name of the size
// @param $qty Int      The quantity of the margin
//
@mixin margin-left-size ($name, $qty)
{
  .ml-#{$name}
  {
    margin-left: $qty;
  }
}

//
// Padding
// Create a utility class for the margin
// .p-[$name]
//
// @param $name String  The name of the size
// @param $qty Int      The quantity of the padding
//
@mixin padding-size ($name, $qty)
{
  .p-#{$name}
  {
    padding: $qty;
  }
}

//
// Padding-X
// Create a utility class for the margin
// .px-[$name]
//
// @param $name String  The name of the size
// @param $qty Int      The quantity of the padding
//
@mixin padding-x-size ($name, $qty)
{
  .px-#{$name}
  {
    padding-left: $qty;
    padding-right: $qty;
  }
}

//
// Padding-Y
// Create a utility class for the margin
// .py-[$name]
//
// @param $name String  The name of the size
// @param $qty Int      The quantity of the padding
//
@mixin padding-y-size ($name, $qty)
{
  .py-#{$name}
  {
    padding-top: $qty;
    padding-bottom: $qty;
  }
}

//
// Padding-Top
// Create a utility class for the margin
// .pt-[$name]
//
// @param $name String  The name of the size
// @param $qty Int      The quantity of the padding
//
@mixin padding-top-size ($name, $qty)
{
  .pt-#{$name}
  {
    padding-top: $qty;
  }
}

//
// Padding-Right
// Create a utility class for the margin
// .pr-[$name]
//
// @param $name String  The name of the size
// @param $qty Int      The quantity of the padding
//
@mixin padding-right-size ($name, $qty)
{
  .pr-#{$name}
  {
    padding-right: $qty;
  }
}

//
// Padding-Bottom
// Create a utility class for the margin
// .pb-[$name]
//
// @param $name String  The name of the size
// @param $qty Int      The quantity of the padding
//
@mixin padding-bottom-size ($name, $qty)
{
  .pb-#{$name}
  {
    padding-bottom: $qty;
  }
}

//
// Padding-Left
// Create a utility class for the margin
// .pl-[$name]
//
// @param $name String  The name of the size
// @param $qty Int      The quantity of the padding
//
@mixin padding-left-size ($name, $qty)
{
  .pl-#{$name}
  {
    padding-left: $qty;
  }
}

//
// Grid Utility
// Generate the utility classes
//
// @param $name String  The name of the size
// @param $ratio Number      The ratio to apply
//
@mixin grid-utility($name, $ratio)
{
  $px: compute-grid($ratio);

  //
  // Columns sizes
  //
  @include columns-size ($name);

  //
  // Margins sizes
  //
  @include margin-size($name, $px);
  @include margin-x-size($name, $px);
  @include margin-y-size($name, $px);
  @include margin-top-size($name, $px);
  @include margin-right-size($name, $px);
  @include margin-bottom-size($name, $px);
  @include margin-left-size($name, $px);

  //
  // Padding sizes
  //
  @include padding-size($name, $px);
  @include padding-x-size($name, $px);
  @include padding-y-size($name, $px);
  @include padding-top-size($name, $px);
  @include padding-right-size($name, $px);
  @include padding-bottom-size($name, $px);
  @include padding-left-size($name, $px);
}

//
//  Compute grid
//  Compute the px value of a border ratio
//
//  @param $ratio Number   The ratio to compute
//  @return Number         The computed px value
//
@function compute-grid($ratio)
{
  @return $ratio * $grid-base;
}
